pipeline {
    agent any
    environment {
        ARTIFACTORY_API_TOKEN = credentials('jboss-access-token')
    }

    stages {
        stage('Test') {
            steps {
                sh 'echo "dummy test" '
            }
        }
        stage('Build') {
            steps {
                sh 'mvn -Dmaven.test.failure.ignore=true -Dcheckstyle.skip clean package'
                archiveArtifacts artifacts: 'target/*.jar', allowEmptyArchive: true
            }
        }
        
        stage('Push to Artifactory') {
            steps {
                echo 'Pushing artifact to Artifactory...'
                script {
                    def archivedArtifact = archiveArtifacts artifacts: 'target/*.jar', allowEmptyArchive: true
                    if (archivedArtifact != null) {
                        def artifactPath = "${JENKINS_HOME}/jobs/${JOB_NAME}/builds/${BUILD_NUMBER}/archive/target/${archivedArtifact}"
                        withCredentials([string(credentialsId: 'jboss-access-token', variable: 'ARTIFACTORY_API_TOKEN')]) {
                            sh '''
                                set +x
                                curl -u $ARTIFACTORY_API_TOKEN -X PUT "http://34.239.127.114:8081/artifactory/petclinic-jars/${env.BUILD_NUMBER}/petclinic-${env.BUILD_NUMBER}.jar" -T "$artifactPath"
                            '''
                        }
                    } else {
                        error 'No archived artifact found!'
                    }
                }
            }
        }
    }  

    post {
        failure {
            slackSend(channel: "#build-status", token: "slack-jenkins-secret-key token", color: "good", message: "${custom_msg()}")
        }
    }
}

def custom_msg() {
    def JENKINS_URL = "http://3.94.201.188:8080"
    def JOB_NAME = env.JOB_NAME
    def BUILD_ID = env.BUILD_ID
    return "FAILED: Job [$JOB_NAME] Logs path: $JENKINS_URL/job/$JOB_NAME/$BUILD_ID/consoleText"
}
